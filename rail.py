import guardrails as gd
from rich import print
import openai
import os

# openai.api_key = "YOUR_OPENAI_KEY"




rail_str = """
<rail version="0.1">
<output>
   <string
       name="generated_sql"
       description="Generate SQL for the given natural language instruction."
       format="bug-free-sql"
       on-fail-bug-free-sql="reask" 
   />
</output>

<prompt>
Generate a valid SQL query for the following natural language instruction:
{{nl_instruction}}

${gr.complete_json_suffix}
</prompt>

</rail>
"""
# @complete_json_suffix
guard = gd.Guard.from_rail_string(rail_str)


raw_llm_response, validated_response, *rest = guard(
openai.Completion.create,
prompt_params={
"nl_instruction": "Select the name of the employee who has the highest salary."
},
engine="text-davinci-003",
max_tokens=2048,
temperature=0,)




# # Defining the natural language instruction for which SQL needs to be generated
# nl_instruction = "Select the name of the employee who has the highest salary."

# # Using Guard to validate the response generated by OpenAI Completion API
# validated_response = guard(
#     openai.Completion.create,
#     prompt_params={"nl_instruction": nl_instruction},
#     engine="text-davinci-003",
#     max_tokens=2048,
#     temperature=0,
# )


print(validated_response)
print(raw_llm_response)
print(validated_response)
